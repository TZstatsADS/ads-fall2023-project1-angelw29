theme_minimal() +
coord_flip() +
labs(title = "Top Bigrams of Medium iOS App Reviews",
subtitle = "using Tidytext in R",
caption = "Data Source: itunesr - iTunes App Store")
hm_data_f_affection %>%
unnest_tokens(word, text, token = "ngrams", n = 2) %>%
separate(word, c("word1", "word2"), sep = " ") %>%
filter(word1 == "husband") %>%
filter(!word1 %in% stop_words$word) %>%
filter(!word2 %in% stop_words$word) %>%
unite(word,word1, word2, sep = " ") %>%
count(word, sort = TRUE) %>%
slice(1:5) %>%
ggplot() + geom_bar(aes(word, n), stat = "identity") +
theme_minimal() +
coord_flip() +
labs(title = "Top Bigrams of Medium iOS App Reviews",
subtitle = "using Tidytext in R",
caption = "Data Source: itunesr - iTunes App Store")
hm_data_m_achievement <- hm_data_m[hm_data_m$predicted_category=="achievement",]
bag_of_words_m_achievement <-  hm_data_m_achievement %>%
unnest_tokens(word, text)
word_count_m_achievement <- bag_of_words_m_achievement %>%
count(word, sort = TRUE)
word_count_m_achievement[1:10,] %>%
mutate(word = reorder(word, n)) %>%
ggplot(aes(word, n)) +
geom_col() +
labs(title = "               Word Frequency in Happy Moments (Achievement) for Men")+
xlab(NULL) +
ylab("Word Frequency")+
coord_flip()
hm_data_f_affection %>%
unnest_tokens(word, text, token = "ngrams", n = 2) %>%
separate(word, c("word1", "word2"), sep = " ") %>%
filter(word1 == "job") %>%
filter(!word1 %in% stop_words$word) %>%
filter(!word2 %in% stop_words$word) %>%
unite(word,word1, word2, sep = " ") %>%
count(word, sort = TRUE) %>%
slice(1:5) %>%
ggplot() + geom_bar(aes(word, n), stat = "identity") +
theme_minimal() +
coord_flip() +
labs(title = "Top Bigrams of Medium iOS App Reviews",
caption = "Data Source: itunesr - iTunes App Store")
hm_data_f_affection %>%
unnest_tokens(word, text, token = "ngrams", n = 2) %>%
separate(word, c("word1", "word2"), sep = " ") %>%
filter(word1 == "husband") %>%
filter(!word1 %in% stop_words$word) %>%
filter(!word2 %in% stop_words$word) %>%
unite(word,word1, word2, sep = " ") %>%
count(word, sort = TRUE) %>%
slice(1:5) %>%
ggplot() + geom_bar(aes(word, n), stat = "identity") +
theme_minimal() +
coord_flip() +
labs(title = "Top Bigrams of Medium iOS App Reviews",
caption = "Data Source: itunesr - iTunes App Store")
hm_data_m_achievement %>%
unnest_tokens(word, text, token = "ngrams", n = 2) %>%
separate(word, c("word1", "word2"), sep = " ") %>%
filter(word1 == "job") %>%
filter(!word1 %in% stop_words$word) %>%
filter(!word2 %in% stop_words$word) %>%
unite(word,word1, word2, sep = " ") %>%
count(word, sort = TRUE) %>%
slice(1:5) %>%
ggplot() + geom_bar(aes(word, n), stat = "identity") +
theme_minimal() +
coord_flip() +
labs(title = "Top Bigrams of Medium iOS App Reviews",
subtitle = "using Tidytext in R",
caption = "Data Source: itunesr - iTunes App Store")
hm_data_m_achievement %>%
unnest_tokens(word, text, token = "ngrams", n = 2) %>%
separate(word, c("word1", "word2"), sep = " ") %>%
filter(word1 == "bought") %>%
filter(!word1 %in% stop_words$word) %>%
filter(!word2 %in% stop_words$word) %>%
unite(word,word1, word2, sep = " ") %>%
count(word, sort = TRUE) %>%
slice(1:5) %>%
ggplot() + geom_bar(aes(word, n), stat = "identity") +
theme_minimal() +
coord_flip() +
labs(title = "Top Bigrams of Medium iOS App Reviews",
subtitle = "using Tidytext in R",
caption = "Data Source: itunesr - iTunes App Store")
hm_data_m_achievement <- hm_data_m[hm_data_m$predicted_category=="achievement",]
bag_of_words_m_achievement <-  hm_data_m_achievement %>%
unnest_tokens(word, text)
word_count_m_achievement <- bag_of_words_m_achievement %>%
count(word, sort = TRUE)
word_count_m_achievement[1:10,] %>%
mutate(word = reorder(word, n)) %>%
ggplot(aes(word, n)) +
geom_col() +
labs(title = "               Word Frequency in Happy Moments (Achievement) for Men")+
xlab(NULL) +
ylab("Word Frequency")+
coord_flip()
word_count_m_achievement
hm_data_f_affection
hm_data_f_affection %>%
unnest_tokens(word, text, token = "ngrams", n = 2) %>%
separate(word, c("word1", "word2"), sep = " ") %>%
filter(word1 == "husband") %>%
filter(!word1 %in% stop_words$word) %>%
filter(!word2 %in% stop_words$word) %>%
unite(word,word1, word2, sep = " ") %>%
count(word, sort = TRUE) %>%
slice(1:5) %>%
ggplot() + geom_bar(aes(word, n), stat = "identity") +
theme_minimal() +
coord_flip() +
labs(title = "Top Bigrams of Medium iOS App Reviews",
caption = "Data Source: itunesr - iTunes App Store")
hm_data_f_affection %>%
unnest_tokens(word, text, token = "ngrams", n = 2) %>%
separate(word, c("word1", "word2"), sep = " ") %>%
filter(word1 == "husband") %>%
filter(!word1 %in% stop_words$word) %>%
filter(!word2 %in% stop_words$word) %>%
unite(word,word1, word2, sep = " ") %>%
count(word, sort = TRUE) %>%
slice(1:20) %>%
ggplot() + geom_bar(aes(word, n), stat = "identity") +
theme_minimal() +
coord_flip() +
labs(title = "Top Bigrams of Medium iOS App Reviews",
caption = "Data Source: itunesr - iTunes App Store")
hm_data_f_affection %>%
unnest_tokens(word, text, token = "ngrams", n = 2) %>%
separate(word, c("word1", "word2"), sep = " ") %>%
hm_data_f_affection
hm_data_f_affection %>%
unnest_tokens(word, text, token = "ngrams", n = 2) %>%
separate(word, c("word1", "word2"), sep = " ")
hm_data_f_affection %>%
unnest_tokens(word, text, token = "ngrams", n = 2) %>%
separate(word, c("word1", "word2"), sep = " ") %>%
filter(word1 == "husband") %>%
filter(!word1 %in% stop_words$word) %>%
filter(!word2 %in% stop_words$word) %>%
unite(word,word1, word2, sep = " ") %>%
count(word, sort = TRUE) %>%
slice(1:20) %>%
ggplot() + geom_bar(aes(word, n), stat = "identity") +
theme_minimal() +
coord_flip() +
labs(title = "Top Bigrams of Medium iOS App Reviews",
caption = "Data Source: itunesr - iTunes App Store")
hm_data_f_affection %>%
unnest_tokens(word, cleaned_hm, token = "ngrams", n = 2) %>%
separate(word, c("word1", "word2"), sep = " ") %>%
filter(word1 == "husband") %>%
filter(!word1 %in% stop_words$word) %>%
filter(!word2 %in% stop_words$word) %>%
unite(word,word1, word2, sep = " ") %>%
count(word, sort = TRUE) %>%
slice(1:20) %>%
ggplot() + geom_bar(aes(word, n), stat = "identity") +
theme_minimal() +
coord_flip() +
labs(title = "Top Bigrams of Medium iOS App Reviews",
caption = "Data Source: itunesr - iTunes App Store")
hm_data_f_affection %>%
unnest_tokens(word, original_hm, token = "ngrams", n = 2) %>%
separate(word, c("word1", "word2"), sep = " ") %>%
filter(word1 == "husband") %>%
filter(!word1 %in% stop_words$word) %>%
filter(!word2 %in% stop_words$word) %>%
unite(word,word1, word2, sep = " ") %>%
count(word, sort = TRUE) %>%
slice(1:20) %>%
ggplot() + geom_bar(aes(word, n), stat = "identity") +
theme_minimal() +
coord_flip() +
labs(title = "Top Bigrams of Medium iOS App Reviews",
caption = "Data Source: itunesr - iTunes App Store")
hm_data_f_affection %>%
unnest_tokens(word, original_hm, token = "ngrams", n = 2) %>%
separate(word, c("word1", "word2"), sep = " ")
hm_data_f_affection %>%
unnest_tokens(word, original_hm, token = "ngrams", n = 2) %>%
separate(word, c("word1", "word2"), sep = " ") %>%
filter(word1 == "husband") %>%
filter(!word1 %in% stop_words$word) %>%
filter(!word2 %in% stop_words$word) %>%
unite(word,word1, word2, sep = " ") %>%
count(word, sort = TRUE)
hm_data_f_affection %>%
unnest_tokens(word, original_hm, token = "ngrams", n = 2) %>%
separate(word, c("word1", "word2"), sep = " ") %>%
filter(word1 == "husband") %>%
filter(!word1 %in% stop_words$word) %>%
filter(!word2 %in% stop_words$word) %>%
unite(word,word1, word2, sep = " ") %>%
count(word, sort = TRUE)
ggplot() + geom_bar(aes(word, n), stat = "identity") +
theme_minimal() +
coord_flip() +
labs(title = "Top Bigrams of Medium iOS App Reviews",
caption = "Data Source: itunesr - iTunes App Store")
hm_data_f_affection %>%
unnest_tokens(word, original_hm, token = "ngrams", n = 2) %>%
separate(word, c("word1", "word2"), sep = " ") %>%
filter(word1 == "husband") %>%
filter(!word1 %in% stop_words$word) %>%
filter(!word2 %in% stop_words$word) %>%
unite(word,word1, word2, sep = " ") %>%
count(word, sort = TRUE) %>%
ggplot() + geom_bar(aes(word, n), stat = "identity") +
theme_minimal() +
coord_flip() +
labs(title = "Top Bigrams of Medium iOS App Reviews",
caption = "Data Source: itunesr - iTunes App Store")
hm_data_f %>%
unnest_tokens(word, text, token = "ngrams", n = 2) %>%
separate(word, c("word1", "word2"), sep = " ") %>%
filter(word1 == "friend") %>%
filter(!word1 %in% stop_words$word) %>%
filter(!word2 %in% stop_words$word) %>%
unite(word,word1, word2, sep = " ") %>%
count(word, sort = TRUE) %>%
ggplot() + geom_bar(aes(word, n), stat = "identity") +
theme_minimal() +
coord_flip() +
labs(title = "Top Bigrams of Medium iOS App Reviews",
caption = "Data Source: itunesr - iTunes App Store")
hm_data_f %>%
unnest_tokens(word, text, token = "ngrams", n = 2) %>%
separate(word, c("word1", "word2"), sep = " ") %>%
filter(word1 == "friend") %>%
filter(!word1 %in% stop_words$word) %>%
filter(!word2 %in% stop_words$word) %>%
unite(word,word1, word2, sep = " ") %>%
count(word, sort = TRUE) %>%
top_n(15) %>%
ggplot() + geom_bar(aes(word, n), stat = "identity") +
theme_minimal() +
coord_flip() +
labs(title = "Top Bigrams of Medium iOS App Reviews",
caption = "Data Source: itunesr - iTunes App Store")
hm_data_f %>%
unnest_tokens(word, text, token = "ngrams", n = 2) %>%
separate(word, c("word1", "word2"), sep = " ") %>%
filter(word1 == "friend") %>%
filter(!word1 %in% stop_words$word) %>%
filter(!word2 %in% stop_words$word) %>%
unite(word,word1, word2, sep = " ") %>%
top_n(15) %>%
count(word, sort = TRUE) %>%
ggplot() + geom_bar(aes(word, n), stat = "identity") +
theme_minimal() +
coord_flip() +
labs(title = "Top Bigrams of Medium iOS App Reviews",
caption = "Data Source: itunesr - iTunes App Store")
hm_data_f %>%
unnest_tokens(word, text, token = "ngrams", n = 2) %>%
separate(word, c("word1", "word2"), sep = " ") %>%
filter(word1 == "friend") %>%
filter(!word1 %in% stop_words$word) %>%
filter(!word2 %in% stop_words$word) %>%
unite(word,word1, word2, sep = " ") %>%
count(word, sort = TRUE) %>%
top_n(-15) %>%
ggplot() + geom_bar(aes(word, n), stat = "identity") +
theme_minimal() +
coord_flip() +
labs(title = "Top Bigrams of Medium iOS App Reviews",
caption = "Data Source: itunesr - iTunes App Store")
hm_data_f %>%
unnest_tokens(word, text, token = "ngrams", n = 2) %>%
separate(word, c("word1", "word2"), sep = " ") %>%
filter(word1 == "friend") %>%
filter(!word1 %in% stop_words$word) %>%
filter(!word2 %in% stop_words$word) %>%
unite(word,word1, word2, sep = " ") %>%
count(word, sort = TRUE) %>%
top_n(15) %>%
ggplot() + geom_bar(aes(word, n), stat = "identity") +
theme_minimal() +
coord_flip() +
labs(title = "Top Bigrams of Medium iOS App Reviews",
caption = "Data Source: itunesr - iTunes App Store")
hm_data_f %>%
unnest_tokens(word, text, token = "ngrams", n = 2) %>%
separate(word, c("word1", "word2"), sep = " ") %>%
filter(word1 == "friend") %>%
filter(!word1 %in% stop_words$word) %>%
filter(!word2 %in% stop_words$word) %>%
unite(word,word1, word2, sep = " ") %>%
count(word, sort = TRUE)
hm_data_f_affection <- hm_data_f[hm_data_f$predicted_category=="affection",]
bag_of_words_f_affection <-  hm_data_f_affection %>%
unnest_tokens(word, text)
word_count_f_affection <- bag_of_words_f_affection %>%
count(word, sort = TRUE)
hm_data_f_achievement <- hm_data_f[hm_data_f$predicted_category=="achievement",]
bag_of_words_f_achievement <-  hm_data_f_achievement %>%
unnest_tokens(word, text)
word_count_f_achievement <- bag_of_words_f_achievement %>%
count(word, sort = TRUE)
hm_data_m_affection <- hm_data_m[hm_data_m$predicted_category=="affection",]
bag_of_words_m_affection <-  hm_data_m_affection %>%
unnest_tokens(word, text)
word_count_m_affection <- bag_of_words_m_affection %>%
count(word, sort = TRUE)
hm_data_m_achievement <- hm_data_m[hm_data_m$predicted_category=="achievement",]
bag_of_words_m_achievement <-  hm_data_m_achievement %>%
unnest_tokens(word, text)
word_count_m_achievement <- bag_of_words_m_achievement %>%
count(word, sort = TRUE)
bp<- ggplot(word_count_f_achievement[1:5,], aes(x="", y=n, fill=word))+
geom_bar(width = 1, stat = "identity")+
coord_polar("y")
bp
bp<- ggplot(word_count_m_achievement[1:5,], aes(x="", y=n, fill=word))+
geom_bar(width = 1, stat = "identity")+
coord_polar("y")
bp
x <- tolower(hm_data$original_hm)
model <- word2vec(x = x, type = "cbow", dim = 15, iter = 20)
embedding <- as.matrix(model)
embedding <- predict(model, c("job", "car"), type = "embedding")
lookslike <- predict(model, c("job", "car"), type = "nearest", top_n = 5)
lookslike
hm_data_f_friend <- hm_data_f[grepl("friend",hm_data_f$text),]
bag_of_words_f_friend <-  hm_data_f_friend %>%
unnest_tokens(word, text)
word_count_f_friend <- bag_of_words_f_friend %>%
count(word, sort = TRUE)
word_count_f_friend
hm_data_f_friend
hm_data_f_friend %>%
unnest_tokens(word, text, token = "ngrams", n = 2) %>%
separate(word, c("word1", "word2"), sep = " ") %>%
filter(word1 == "bought") %>%
filter(!word1 %in% stop_words$word) %>%
filter(!word2 %in% stop_words$word) %>%
unite(word,word1, word2, sep = " ") %>%
count(word, sort = TRUE) %>%
slice(1:5) %>%
ggplot() + geom_bar(aes(word, n), stat = "identity") +
theme_minimal() +
coord_flip() +
labs(title = "Top Bigrams of Medium iOS App Reviews",
subtitle = "using Tidytext in R",
caption = "Data Source: itunesr - iTunes App Store")
hm_data_f_friend %>%
unnest_tokens(word, text, token = "ngrams", n = 2) %>%
separate(word, c("word1", "word2"), sep = " ") %>%
filter(word1 == "friend") %>%
filter(!word1 %in% stop_words$word) %>%
filter(!word2 %in% stop_words$word) %>%
unite(word,word1, word2, sep = " ") %>%
count(word, sort = TRUE) %>%
slice(1:5) %>%
ggplot() + geom_bar(aes(word, n), stat = "identity") +
theme_minimal() +
coord_flip() +
labs(title = "Top Bigrams of Medium iOS App Reviews",
subtitle = "using Tidytext in R",
caption = "Data Source: itunesr - iTunes App Store")
hm_data_f_friend %>%
unnest_tokens(word, text, token = "ngrams", n = 2) %>%
separate(word, c("word1", "word2"), sep = " ") %>%
filter(word1 == "friend") %>%
filter(!word1 %in% stop_words$word) %>%
filter(!word2 %in% stop_words$word) %>%
unite(word,word1, word2, sep = " ") %>%
count(word, sort = TRUE)
hm_data_f_friend <- hm_data_f[grepl("friend",hm_data_f$text),]
bag_of_words_f_friend <-  hm_data_f_friend %>%
unnest_tokens(word, text)
word_count_f_friend <- bag_of_words_f_friend %>%
count(word, sort = TRUE)
word_count_f_friend
hm_data_m_friend
hm_data_m_friend <- hm_data_m[grepl("friend",hm_data_m$text),]
bag_of_words_m_friend <-  hm_data_m_friend %>%
unnest_tokens(word, text,token = "ngrams", n = 2)
word_count_m_friend <- bag_of_words_m_friend %>%
count(word, sort = TRUE)
word_count_m_friend
hm_data_f_friend <- hm_data_f[grepl("friend",hm_data_f$text),]
bag_of_words_f_friend <-  hm_data_f_friend %>%
unnest_tokens(word, text, token = "ngrams", n = 2))
hm_data_f_friend <- hm_data_f[grepl("friend",hm_data_f$text),]
bag_of_words_f_friend <-  hm_data_f_friend %>%
unnest_tokens(word, text, token = "ngrams", n = 2)
word_count_f_friend <- bag_of_words_f_friend %>%
count(word, sort = TRUE)
word_count_f_friend
hm_data_m_friend <- hm_data_m[grepl("friend",hm_data_m$text),]
bag_of_words_m_friend <-  hm_data_m_friend %>%
separate(word, c("word1", "word2"), sep = " ") %>%
filter(word1 == "friend") %>%
filter(!word1 %in% stop_words$word) %>%
filter(!word2 %in% stop_words$word) %>%
unite(word,word1, word2, sep = " ") %>%
unnest_tokens(word, text,token = "ngrams", n = 2)
hm_data_m_friend <- hm_data_m[grepl("friend",hm_data_m$text),]
bag_of_words_m_friend <-  hm_data_m_friend %>%
unnest_tokens(word, text,token = "ngrams", n = 2)
separate(word, c("word1", "word2"), sep = " ") %>%
filter(word1 == "friend") %>%
filter(!word1 %in% stop_words$word) %>%
filter(!word2 %in% stop_words$word) %>%
unite(word,word1, word2, sep = " ") %>%
word_count_m_friend <- bag_of_words_m_friend %>%
count(word, sort = TRUE)
hm_data_m_friend <- hm_data_m[grepl("friend",hm_data_m$text),]
bag_of_words_m_friend <-  hm_data_m_friend %>%
unnest_tokens(word, text,token = "ngrams", n = 2) %>%
separate(word, c("word1", "word2"), sep = " ") %>%
filter(word1 == "friend") %>%
filter(!word1 %in% stop_words$word) %>%
filter(!word2 %in% stop_words$word) %>%
unite(word,word1, word2, sep = " ") %>%
word_count_m_friend <- bag_of_words_m_friend %>%
count(word, sort = TRUE)
hm_data_m_friend <- hm_data_m[grepl("friend",hm_data_m$text),]
bag_of_words_m_friend <-  hm_data_m_friend %>%
unnest_tokens(word, text,token = "ngrams", n = 2) %>%
separate(word, c("word1", "word2"), sep = " ") %>%
filter(word1 == "friend") %>%
filter(!word1 %in% stop_words$word) %>%
filter(!word2 %in% stop_words$word) %>%
unite(word,word1, word2, sep = " ")
word_count_m_friend <- bag_of_words_m_friend %>%
count(word, sort = TRUE)
word_count_m_friend
hm_data_m_friend <- hm_data_m[grepl("friend",hm_data_m$text),]
bag_of_words_m_friend <-  hm_data_m_friend %>%
unnest_tokens(word, text,token = "ngrams", n = 2) %>%
separate(word, c("word1", "word2"), sep = " ") %>%
filter(!word1 %in% stop_words$word) %>%
filter(!word2 %in% stop_words$word) %>%
unite(word,word1, word2, sep = " ")
word_count_m_friend <- bag_of_words_m_friend %>%
count(word, sort = TRUE)
word_count_m_friend
hm_data_f_friend <- hm_data_f[grepl("friend",hm_data_f$text),]
bag_of_words_f_friend <-  hm_data_f_friend %>%
unnest_tokens(word, text, token = "ngrams", n = 2)
word_count_f_friend <- bag_of_words_f_friend %>%
count(word, sort = TRUE)
word_count_f_friend
model <- udpipe_download_model(language = "english")
hm_data_f %>%
unnest_tokens(word, text, token = "ngrams", n = 2) %>%
separate(word, c("word1", "word2"), sep = " ") %>%
filter(word1 == "friend") %>%
filter(!word1 %in% stop_words$word) %>%
filter(!word2 %in% stop_words$word) %>%
unite(word,word1, word2, sep = " ") %>%
count(word, sort = TRUE) %>%
top_n(15) %>%
ggplot() + geom_bar(aes(word, n), stat = "identity") +
theme_minimal() +
coord_flip() +
labs(title = "Top Bigrams of Medium iOS App Reviews",
caption = "Data Source: itunesr - iTunes App Store")
udmodel_english <- udpipe_load_model(file = 'english-ud-2.0-170801.udpipe')
udmodel_english <- udpipe_load_model(file = 'english-ud-2.0-170801.udpipe')
model <- udpipe_download_model(language = "english")
udmodel_english <- udpipe_load_model(file = 'english-ud-2.0-170801.udpipe')
library(udpipe)
library(udpipe)
model <- udpipe_download_model(language = "english")
udmodel_english <- udpipe_load_model(file = 'english-ud-2.0-170801.udpipe')
udmodel_english <- udpipe_load_model(file = 'english-ud.udpipe')
udmodel_english <- udpipe_load_model(file = 'english.udpipe')
model <- udpipe_download_model(language = "english")
udmodel_english <- udpipe_load_model(file = 'english-ewt-ud-2.5-191206')
model <- udpipe_download_model(language = "english")
udmodel_english <- udpipe_load_model(file = 'english-ewt-ud-2.5-191206.udpipe')
s <- udpipe_annotate(udmodel_english, hm_data_f$text)
library(lattice)
stats <- txt_freq(x$upos)
x
library(udpipe)
model <- udpipe_download_model(language = "english")
udmodel_english <- udpipe_load_model(file = 'english-ewt-ud-2.5-191206.udpipe')
s <- udpipe_annotate(udmodel_english, hm_data_f$text)
x <- data.frame(s)
library(lattice)
stats <- txt_freq(x$upos)
stats$key <- factor(stats$key, levels = rev(stats$key))
barchart(key ~ freq, data = stats, col = "yellow",
main = "UPOS (Universal Parts of Speech)\n frequency of occurrence",
xlab = "Freq")
hm_data_f %>%
unnest_tokens(word, text, token = "ngrams", n = 2) %>%
separate(word, c("word1", "word2"), sep = " ") %>%
filter(word1 == "friend") %>%
filter(!word1 %in% stop_words$word) %>%
filter(!word2 %in% stop_words$word) %>%
unite(word,word1, word2, sep = " ") %>%
count(word, sort = TRUE) %>%
top_n(15) %>%
ggplot() + geom_bar(aes(word, n), stat = "identity") +
theme_minimal() +
coord_flip() +
labs(title = "Top Bigrams of Medium iOS App Reviews",
caption = "Data Source: itunesr - iTunes App Store")
getwd()
